{
  "extends": ["eslint:recommended", "plugin:@typescript-eslint/recommended"],

  "ignorePatterns": ["*.d.ts"],
  "plugins": [
    "eslint-plugin-ban",
    "eslint-plugin-jsx-a11y",
    "eslint-plugin-react",
    "eslint-plugin-react-hooks",
    "simple-import-sort",
    "@typescript-eslint"
  ],
  "parser": "@typescript-eslint/parser",

  "rules": {
    "ban/ban": [
      "warn",
      { "name": ["_", "get"], "message": "Use lib/utils/get instead" },
      { "name": ["fp", "get"], "message": "Use lib/utils/get instead" },
      { "name": ["_", "set"], "message": "Use lib/utils/set instead" },
      { "name": ["fp", "set"], "message": "Use lib/utils/set instead" },
      { "name": "trace", "message": "Tracing is for debug only" },
      { "name": "spy", "message": "Spying is for debug only" }
    ],
    "simple-import-sort/imports": [
      "warn",
      {
        "groups": [
          // NOTE: See https://github.com/lydell/eslint-plugin-simple-import-sort/#custom-grouping
          ["^\\u0000"],
          ["^@?\\w"],
          ["^types"],
          ["^lib"],
          ["^gui"],
          ["^styles"],
          ["^"],
          ["^\\."]
        ]
      }
    ],

    "@typescript-eslint/consistent-type-assertions": "warn",
    "@typescript-eslint/no-array-constructor": "warn",
    "@typescript-eslint/no-redeclare": "warn",
    "@typescript-eslint/no-use-before-define": [
      "warn",
      {
        "functions": false,
        "classes": false,
        "variables": false,
        "typedefs": false
      }
    ],
    "@typescript-eslint/no-unused-expressions": [
      "error",
      {
        "allowShortCircuit": true,
        "allowTernary": true,
        "allowTaggedTemplates": true
      }
    ],
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "args": "none",
        "varsIgnorePattern": "^_$"
      }
    ],
    "@typescript-eslint/no-useless-constructor": "warn",

    "eqeqeq": ["warn", "smart"],
    "no-caller": "warn",
    "no-cond-assign": ["warn", "except-parens"],
    "no-console": ["warn", { "allow": ["warn", "error"] }],
    "no-control-regex": "warn",
    "no-duplicate-case": "warn",
    "no-empty-character-class": "warn",
    "no-empty-pattern": "warn",
    "no-else-return": "warn",
    "no-eval": "warn",
    "no-ex-assign": "warn",
    "no-extend-native": "warn",
    "no-extra-bind": "warn",
    "no-extra-label": "warn",
    "no-fallthrough": "warn",
    "no-implied-eval": "warn",
    "no-invalid-regexp": "warn",
    "no-iterator": "warn",
    "no-label-var": "warn",
    "no-labels": ["warn", { "allowLoop": true, "allowSwitch": false }],
    "no-lone-blocks": "warn",
    "no-loop-func": "warn",
    "no-mixed-operators": [
      "warn",
      {
        "groups": [
          ["&", "|", "^", "~", "<<", ">>", ">>>"],
          ["==", "!=", "===", "!==", ">", ">=", "<", "<="],
          ["&&", "||"],
          ["in", "instanceof"]
        ],
        "allowSamePrecedence": false
      }
    ],
    "no-multi-str": "warn",
    "no-new-func": "warn",
    "no-new-object": "warn",
    "no-new-wrappers": "warn",
    "no-octal": "warn",
    "no-octal-escape": "warn",
    "no-regex-spaces": "warn",
    "no-script-url": "warn",
    "no-self-assign": "warn",
    "no-self-compare": "warn",
    "no-sequences": "warn",
    "no-shadow-restricted-names": "warn",
    "no-sparse-arrays": "warn",
    "no-template-curly-in-string": "warn",
    "no-throw-literal": "warn",
    "no-unreachable": "warn",
    "no-unused-labels": "warn",
    "no-useless-computed-key": "warn",
    "no-useless-concat": "warn",
    "no-useless-escape": "warn",
    "no-useless-rename": [
      "warn",
      {
        "ignoreDestructuring": false,
        "ignoreImport": false,
        "ignoreExport": false
      }
    ],
    "require-yield": "warn",
    "strict": ["warn", "never"],
    "use-isnan": "warn",

    // https://github.com/yannickcr/eslint-plugin-react/tree/master/docs/rules
    "react/jsx-no-comment-textnodes": "warn",
    "react/jsx-no-target-blank": "warn",
    "react/no-danger-with-children": "warn",
    "react/no-deprecated": "error",

    // https://github.com/evcohen/eslint-plugin-jsx-a11y/tree/master/docs/rules
    "jsx-a11y/alt-text": "warn",
    "jsx-a11y/anchor-has-content": "warn",
    "jsx-a11y/anchor-is-valid": [
      "warn",
      { "aspects": ["noHref", "invalidHref"] }
    ],
    "jsx-a11y/aria-activedescendant-has-tabindex": "warn",
    "jsx-a11y/aria-props": "warn",
    "jsx-a11y/aria-proptypes": "warn",
    "jsx-a11y/aria-role": ["warn", { "ignoreNonDOM": true }],
    "jsx-a11y/aria-unsupported-elements": "warn",
    "jsx-a11y/heading-has-content": "warn",
    "jsx-a11y/iframe-has-title": "warn",
    "jsx-a11y/img-redundant-alt": "warn",
    "jsx-a11y/no-access-key": "warn",
    "jsx-a11y/no-distracting-elements": "warn",
    "jsx-a11y/no-redundant-roles": "warn",
    "jsx-a11y/role-has-required-aria-props": "warn",
    "jsx-a11y/role-supports-aria-props": "warn",
    "jsx-a11y/scope": "warn",

    // https://github.com/facebook/react/tree/main/packages/eslint-plugin-react-hooks
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": [
      "warn",
      {
        "additionalHooks": "useCustomEqualityEffect"
      }
    ],

    // Restrict a lot of browser globals that could cause unexpected runtime errors
    "no-restricted-globals": [
      "error",
      "postMessage",
      "blur",
      "focus",
      "close",
      "frames",
      "self",
      "parent",
      "opener",
      "top",
      "length",
      "closed",
      "origin",
      "name",
      "locationbar",
      "menubar",
      "personalbar",
      "scrollbars",
      "statusbar",
      "toolbar",
      "status",
      "frameElement",
      "navigator",
      "customElements",
      "external",
      "screen",
      "innerWidth",
      "innerHeight",
      "scrollX",
      "pageXOffset",
      "scrollY",
      "pageYOffset",
      "screenX",
      "screenY",
      "outerWidth",
      "outerHeight",
      "devicePixelRatio",
      "clientInformation",
      "screenLeft",
      "screenTop",
      "onanimationend",
      "onanimationiteration",
      "onanimationstart",
      "ontransitionend",
      "onwebkitanimationend",
      "onwebkitanimationiteration",
      "onwebkitanimationstart",
      "onwebkittransitionend",
      "isSecureContext",
      "onabort",
      "onblur",
      "oncanplay",
      "oncanplaythrough",
      "onchange",
      "onclick",
      "onclose",
      "oncontextmenu",
      "oncuechange",
      "ondblclick",
      "ondrag",
      "ondragend",
      "ondragenter",
      "ondragleave",
      "ondragover",
      "ondragstart",
      "ondrop",
      "ondurationchange",
      "onemptied",
      "onended",
      "onerror",
      "onfocus",
      "oninput",
      "oninvalid",
      "onkeydown",
      "onkeypress",
      "onkeyup",
      "onload",
      "onloadeddata",
      "onloadedmetadata",
      "onloadstart",
      "onmousedown",
      "onmouseenter",
      "onmouseleave",
      "onmousemove",
      "onmouseout",
      "onmouseover",
      "onmouseup",
      "onpause",
      "onplay",
      "onplaying",
      "onprogress",
      "onratechange",
      "onreset",
      "onresize",
      "onscroll",
      "onseeked",
      "onseeking",
      "onselect",
      "onstalled",
      "onsubmit",
      "onsuspend",
      "ontimeupdate",
      "ontoggle",
      "onvolumechange",
      "onwaiting",
      "onwheel",
      "onauxclick",
      "ongotpointercapture",
      "onlostpointercapture",
      "onpointerdown",
      "onpointermove",
      "onpointerup",
      "onpointercancel",
      "onpointerover",
      "onpointerout",
      "onpointerenter",
      "onpointerleave",
      "onafterprint",
      "onbeforeprint",
      "onbeforeunload",
      "onhashchange",
      "onlanguagechange",
      "onmessage",
      "onmessageerror",
      "onoffline",
      "ononline",
      "onpagehide",
      "onpageshow",
      "onpopstate",
      "onrejectionhandled",
      "onstorage",
      "onunhandledrejection",
      "onunload",
      "performance",
      "stop",
      "open",
      "print",
      "captureEvents",
      "releaseEvents",
      "getComputedStyle",
      "matchMedia",
      "moveTo",
      "moveBy",
      "resizeTo",
      "resizeBy",
      "getSelection",
      "createImageBitmap",
      "scroll",
      "scrollTo",
      "scrollBy",
      "crypto",
      "ondevicemotion",
      "ondeviceorientation",
      "ondeviceorientationabsolute",
      "indexedDB",
      "visualViewport",
      "speechSynthesis"
    ]
  },

  "settings": { "react": { "version": "detect" } }
}
